{
  "address": "0x6539c99b53A710435005209Cb170aEC186cAbFf9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x020e9d6ea8416086955d442af728d53e9edc0af13f44a05daa0b393d385fbca8",
  "receipt": {
    "to": null,
    "from": "0xCF070a33808dd51152e471Df9BBE84b4Be554AB3",
    "contractAddress": "0x6539c99b53A710435005209Cb170aEC186cAbFf9",
    "transactionIndex": 11,
    "gasUsed": "900688",
    "logsBloom": "0x
    "blockHash": "0x40499e42baf42ebbc8043d9d3c8adc93ed1d148d4fd9b1558ca5730302296e02",
    "transactionHash": "0x020e9d6ea8416086955d442af728d53e9edc0af13f44a05daa0b393d385fbca8",
    "logs": [],
    "blockNumber": 10988768,
    "cumulativeGasUsed": "5692942",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
  "numDeployments": 1,
  "solcInputHash": "0004a01131b66a49c0aa29d8c78bea34",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n    error NotOwner();\\n\\n// 856.093\\n// 836.135\\ncontract FundMe {\\n\\n    using PriceConverter for uint256;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address public i_owner;\\n\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n\\n    constructor(address priceFeedAddress){\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // Want to be able to set a minimum fund amount in USD\\n        require(msg.value.getConversionRate(priceFeed) > MINIMUM_USD, \\\"Didn't send enough!\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // reset the array\\n        funders = new address[](0);\\n        // actually withdraw the funds\\n        (bool callSuccess,) = payable(msg.sender).call{value : address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // What happens if someone send this contract ETH without calling the fund function\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\",\"keccak256\":\"0xf8e8847f364bb369b4f19590b5c1e622193f3ea6f10a17ba90786dd5c4e5b913\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        // ABI\\r\\n        // Address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n//        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\r\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\r\\n        // ETH in terms of USD\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xdb810425c3373dcb022988bb518c455641f9750b4920cc60d738a21e3baada43\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000fdd38038062000fdd8339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610e81806200015c6000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b9565b610524565b6040516100d891906107ff565b60405180910390f35b3480156100ed57600080fd5b506100f661053c565b60405161010391906107ff565b60405180910390f35b34801561011857600080fd5b50610121610548565b60405161012e9190610879565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056e565b60405161016391906108a3565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108ea565b610594565b6040516101a091906108a3565b60405180910390f35b678ac7230489e800006101e7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d390919063ffffffff16565b11610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610974565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109c3565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041457600080828154811061038e5761038d610a19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040c90610a48565b91505061036c565b50600067ffffffffffffffff8111156104305761042f610a91565b5b60405190808252806020026020018201604052801561045e5781602001602082028036833780820191505090505b50600090805190602001906104749291906106af565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049b90610af1565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b5050905080610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890610b52565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081815481106105a457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105df8361060f565b90506000670de0b6b3a764000085836105f89190610b72565b6106029190610bfb565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065857600080fd5b505afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190610cb9565b5050509150506402540be400816106a79190610d34565b915050919050565b828054828255906000526020600020908101928215610728579160200282015b828111156107275782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cf565b5b5090506107359190610739565b5090565b5b8082111561075257600081600090555060010161073a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107868261075b565b9050919050565b6107968161077b565b81146107a157600080fd5b50565b6000813590506107b38161078d565b92915050565b6000602082840312156107cf576107ce610756565b5b60006107dd848285016107a4565b91505092915050565b6000819050919050565b6107f9816107e6565b82525050565b600060208201905061081460008301846107f0565b92915050565b6000819050919050565b600061083f61083a6108358461075b565b61081a565b61075b565b9050919050565b600061085182610824565b9050919050565b600061086382610846565b9050919050565b61087381610858565b82525050565b600060208201905061088e600083018461086a565b92915050565b61089d8161077b565b82525050565b60006020820190506108b86000830184610894565b92915050565b6108c7816107e6565b81146108d257600080fd5b50565b6000813590506108e4816108be565b92915050565b600060208284031215610900576108ff610756565b5b600061090e848285016108d5565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b600061095e601383610917565b915061096982610928565b602082019050919050565b6000602082019050818103600083015261098d81610951565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ce826107e6565b91506109d9836107e6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0e57610a0d610994565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a53826107e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8657610a85610994565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610adb600083610ac0565b9150610ae682610acb565b600082019050919050565b6000610afc82610ace565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b3c600b83610917565b9150610b4782610b06565b602082019050919050565b60006020820190508181036000830152610b6b81610b2f565b9050919050565b6000610b7d826107e6565b9150610b88836107e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bc157610bc0610994565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c06826107e6565b9150610c11836107e6565b925082610c2157610c20610bcc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4b81610c2c565b8114610c5657600080fd5b50565b600081519050610c6881610c42565b92915050565b6000819050919050565b610c8181610c6e565b8114610c8c57600080fd5b50565b600081519050610c9e81610c78565b92915050565b600081519050610cb3816108be565b92915050565b600080600080600060a08688031215610cd557610cd4610756565b5b6000610ce388828901610c59565b9550506020610cf488828901610c8f565b9450506040610d0588828901610ca4565b9350506060610d1688828901610ca4565b9250506080610d2788828901610c59565b9150509295509295909350565b6000610d3f82610c6e565b9150610d4a83610c6e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8957610d88610994565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc657610dc5610994565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e0357610e02610994565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e4057610e3f610994565b5b82820290509291505056fea26469706673582212206385d060c7038695db6b040952cf668ff05e607b534dabc6c556c0d569cbc06964736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107b9565b610524565b6040516100d891906107ff565b60405180910390f35b3480156100ed57600080fd5b506100f661053c565b60405161010391906107ff565b60405180910390f35b34801561011857600080fd5b50610121610548565b60405161012e9190610879565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056e565b60405161016391906108a3565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108ea565b610594565b6040516101a091906108a3565b60405180910390f35b678ac7230489e800006101e7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d390919063ffffffff16565b11610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610974565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d991906109c3565b92505081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041457600080828154811061038e5761038d610a19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040c90610a48565b91505061036c565b50600067ffffffffffffffff8111156104305761042f610a91565b5b60405190808252806020026020018201604052801561045e5781602001602082028036833780820191505090505b50600090805190602001906104749291906106af565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049b90610af1565b60006040518083038185875af1925050503d80600081146104d8576040519150601f19603f3d011682016040523d82523d6000602084013e6104dd565b606091505b5050905080610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890610b52565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081815481106105a457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105df8361060f565b90506000670de0b6b3a764000085836105f89190610b72565b6106029190610bfb565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065857600080fd5b505afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190610cb9565b5050509150506402540be400816106a79190610d34565b915050919050565b828054828255906000526020600020908101928215610728579160200282015b828111156107275782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cf565b5b5090506107359190610739565b5090565b5b8082111561075257600081600090555060010161073a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107868261075b565b9050919050565b6107968161077b565b81146107a157600080fd5b50565b6000813590506107b38161078d565b92915050565b6000602082840312156107cf576107ce610756565b5b60006107dd848285016107a4565b91505092915050565b6000819050919050565b6107f9816107e6565b82525050565b600060208201905061081460008301846107f0565b92915050565b6000819050919050565b600061083f61083a6108358461075b565b61081a565b61075b565b9050919050565b600061085182610824565b9050919050565b600061086382610846565b9050919050565b61087381610858565b82525050565b600060208201905061088e600083018461086a565b92915050565b61089d8161077b565b82525050565b60006020820190506108b86000830184610894565b92915050565b6108c7816107e6565b81146108d257600080fd5b50565b6000813590506108e4816108be565b92915050565b600060208284031215610900576108ff610756565b5b600061090e848285016108d5565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b600061095e601383610917565b915061096982610928565b602082019050919050565b6000602082019050818103600083015261098d81610951565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ce826107e6565b91506109d9836107e6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a0e57610a0d610994565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a53826107e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a8657610a85610994565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610adb600083610ac0565b9150610ae682610acb565b600082019050919050565b6000610afc82610ace565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b3c600b83610917565b9150610b4782610b06565b602082019050919050565b60006020820190508181036000830152610b6b81610b2f565b9050919050565b6000610b7d826107e6565b9150610b88836107e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bc157610bc0610994565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c06826107e6565b9150610c11836107e6565b925082610c2157610c20610bcc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4b81610c2c565b8114610c5657600080fd5b50565b600081519050610c6881610c42565b92915050565b6000819050919050565b610c8181610c6e565b8114610c8c57600080fd5b50565b600081519050610c9e81610c78565b92915050565b600081519050610cb3816108be565b92915050565b600080600080600060a08688031215610cd557610cd4610756565b5b6000610ce388828901610c59565b9550506020610cf488828901610c8f565b9450506040610d0588828901610ca4565b9350506060610d1688828901610ca4565b9250506080610d2788828901610c59565b9150509295509295909350565b6000610d3f82610c6e565b9150610d4a83610c6e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d8957610d88610994565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dc657610dc5610994565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e0357610e02610994565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e4057610e3f610994565b5b82820290509291505056fea26469706673582212206385d060c7038695db6b040952cf668ff05e607b534dabc6c556c0d569cbc06964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
